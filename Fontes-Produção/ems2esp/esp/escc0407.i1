/******************************************************************************
**
**  escc0407.i1 - Variaveis e frames comuns
**
*****************************************************************************/

{cdp/cdcfgdis.i} /* include versÆo ems */

define temp-table tt-param
    field destino              as integer
    field arquivo              as char
    field usuario              as char
    field data-exec            as date
    field hora-exec            as integer
    field i-classifica         as integer
    field i-nome-abrev         as integer
    field l-salto-pagina       as logical
    field c-estabel-i          as char
    field c-estabel-f          as char
    field c-item-i             as char
    field c-item-f             as char
    field i-gr-fornec-i        as integer
    field i-gr-fornec-f        as integer
    field i-fornec-i           as integer
    field i-fornec-f           as integer
    field c-comprado-i         as char
    field c-comprado-f         as char
    field i-nr-processo-i      as integer
    field i-nr-processo-f      as integer
    field i-pedido-i           as integer
    field i-pedido-f           as integer
    FIELD i-contrato-i         AS INTEGER
    FIELD i-contrato-f         AS INTEGER
    FIELD l-ordem              AS LOGICAL
    FIELD l-programacao        AS LOGICAL
    FIELD l-medicao            AS LOGICAL
    field da-iniper            as date format 99/99/9999
    field da-fimper            as date format 99/99/9999
    field l-lista-narra-item   as logical
    field l-lista-narra-pedido as logical
    field l-lista-narra-ordem  as logical
    field l-lista-texto-livre  as logical
    field c-tipo-texto         as char
    field c-descri-moeda       as char
    field i-tipo-moeda         as integer
    field l-perm-texto         as logical
    field c-param              as char
    field c-classe             as char
    field c-destino            as char
    field l-ped-emitido        as logical
    field l-ped-aprovado       as logical
    field l-despesas-imp       as logical  /* Importa‡Æo */
    field i-despesas-pag       as integer  /* Importa‡Æo */
    field l-despesas-inc       as logical. /* Importa‡Æo */ 

DEF TEMP-TABLE tt-ordem NO-UNDO
    FIELD data-entrega    LIKE prazo-compra.data-entrega
    FIELD num-pedido      LIKE pedido-compr.num-pedido  
    FIELD natur           AS CHAR
    FIELD grupo           LIKE emitente.cod-gr-forn     
    FIELD nome-abrev      LIKE emitente.nome-abrev      
    FIELD num-ordem       LIKE ordem-compra.numero-ordem
    FIELD parcela         LIKE prazo-compra.parcela     
    FIELD cod-estabel     LIKE ordem-compra.cod-estabel 
    FIELD it-codigo       LIKE ordem-compra.it-codigo   
    FIELD un              LIKE prazo-compra.un          
    FIELD descr           LIKE ITEM.desc-item
    FIELD comprado        LIKE comprador.cod-comprado
    field nr-contrato     like ordem-compra.nr-contrato
    field num-seq-item like ordem-compra.num-seq-item
    field tipo            as   character format 'x(10)'
    FIELD cod-emitente    LIKE emitente.cod-emitente
    FIELD nr-processo     LIKE ordem-compra.nr-processo
    FIELD ordem-servic    LIKE ordem-compra.ordem-servic
    FIELD quant-saldo     LIKE prazo-compra.quant-saldo 
    FIELD preco-unit      as decimal format ">>>>>,>>>,>>9.9999"             
    FIELD preco-merc      as decimal format ">>>>>>>>>,>>>,>>9.99"           
    FIELD valor-ipi       as decimal format ">>>>>>>,>>>,>>9.99"             
    FIELD preco-total     as decimal format ">>>>>>>>>,>>>,>>9.99"           
    FIELD desc-moeda      LIKE tt-param.c-descri-moeda  
    FIELD atraso          as integer format ">,>>9-"     
    FIELD comentarios     LIKE pedido-compr.comentarios
    FIELD narrativa       LIKE ordem-compra.narrativa
    FIELD nome-comp       LIKE comprador.nome
    FIELD nome-estab      LIKE estabelec.nome
    FIELD gr-forn-desc    as char format "x(27)" initial " "
    FIELD telefone        AS CHAR FORMAT "x(15)" 
    FIELD ramal           AS CHAR FORMAT "x(05)"
    FIELD telefax         LIKE emitente.telefax      
    FIELD ramal-fax       LIKE emitente.ramal-fax    
    FIELD nome-emit       LIKE emitente.nome-emit
    FIELD desc-item       LIKE ITEM.desc-item
    FIELD proc-desc       LIKE proc-compra.descricao
    FIELD seq             AS INT
    FIELD r-rowid         AS ROWID
    INDEX ch-data
          data-entrega
          seq
    INDEX ch-comprado
          comprado
          data-entrega
          seq
    INDEX ch-estab
          cod-estabel
          data-entrega
          seq
    INDEX ch-emit
          cod-emitente
          num-pedido
          num-ordem
          data-entrega
          seq
    INDEX ch-nome-abrev
          nome-abrev
          data-entrega
          num-pedido
          seq
    INDEX ch-item
          it-codigo
          seq
    INDEX ch-pedido
          num-pedido
          num-ordem
          seq
    INDEX ch-processo
          nr-processo
          num-ordem
          parcela
          seq.

{include/tt-edit.i}

def {1} shared var l-preco-bruto   as logical init no no-undo.
def {1} shared var l-imprime       as logical.
def {1} shared var i-conta-narra   as integer format "9" init 0.
def {1} shared var i-salta-narra   as integer format "9" init 0.
def {1} shared var i-atraso        as integer format ">,>>9-".
def {1} shared var de-preco-unit   as decimal format ">>>>>,>>>,>>9.9999".
def {1} shared var de-preco-merc   as decimal format ">>>>>>>>>,>>>,>>9.99".
def {1} shared var de-valor-ipi    as decimal format ">>>>>>>,>>>,>>9.99".
def {1} shared var de-preco-total  as decimal format ">>>>>>>>>,>>>,>>9.99".
def {1} shared var de-preco-conv   as decimal format ">>>>>>>>>,>>>,>>9.99".
def {1} shared var de-tot-forn     as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-data     as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-compr    as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-estab    as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-geral    as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-item     as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-ped      as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-tot-proc     as decimal format ">>>>>,>>>,>>>,>>>,>>9.99".
def {1} shared var de-val-orig     like de-preco-merc.
def {1} shared var c-label-aux     as char format "x(19)" init "Codigo Referencia".
def {1} shared var c-narrativa     as char view-as editor size 80 by 2 no-undo.
def {1} shared var c-descricao     as char format "x(60)".
def {1} shared var c-natureza      as char no-undo.

def var h-acomp                    as handle no-undo.
def var grupo-fornec-descricao     as char format "x(27)" initial " ".
def var c-processo-descricao       like proc-compra.descricao.
def var l-param                    like param-global.exp-cep no-undo.
def var i-conta                    as int. 
DEF VAR i-seq                      AS INT.

/* Define variaveis para traducao */
def var c-lb-narra-it  as char no-undo.
def var c-lb-narra-ped as char no-undo.
def var c-lb-narra-ord as char no-undo.
def var c-lb-ped-emit  as char no-undo.
def var c-lb-ped-aprov as char no-undo.
def var c-lb-param     as char no-undo.
def var c-lb-moeda     as char no-undo.
def var c-lb-texto     as char no-undo.
def var c-lb-selec     as char no-undo.
def var c-lb-estab     as char no-undo.
def var c-lb-item      as char no-undo.
def var c-lb-grupo     as char no-undo.
def var c-lb-fornec    as char no-undo.
def var c-lb-compr     as char no-undo.
def var c-lb-proc      as char no-undo.
def var c-lb-pedi      as char no-undo.
def var c-lb-data      as char no-undo.
def var c-lb-classe    as char no-undo.
def var c-lb-salta     as char no-undo.
def var c-lb-impr      as char no-undo.
def var c-lb-dest      as char no-undo.
def var c-lb-usuar     as char no-undo.
def var c-lb-total     as char no-undo.
def var c-lb-tot-ger   as char no-undo.
def var c-lb-natur     as char no-undo.
def var c-lb-gf        as char no-undo.
def var c-lb-ordem     as char no-undo.
def var c-lb-pa        as char no-undo.
def var c-lb-est       as char no-undo.
def var c-lb-descr     as char no-undo.
def var c-lb-un        as char no-undo.
def var c-lb-refer     as char no-undo.
def var c-lb-os        as char no-undo.
def var c-lb-qtde      as char no-undo.
def var c-lb-unit      as char no-undo.
def var c-lb-merc      as char no-undo.
def var c-lb-ipi       as char no-undo.
def var c-lb-pr-tot    as char no-undo.
def var c-lb-atraso    as char no-undo.
def var c-lb-fone      as char no-undo.
def var c-lb-fax       as char no-undo.
def var c-format       as char no-undo.

form tt-editor.conteudo at 52
     with stream-io no-box no-label width 132 frame f-narrativa.

form header
     c-lb-data          format "x(9)"
     c-lb-pedi   at 12  format "x(6)"
     c-lb-natur  at 22
     c-lb-gf     at 37  format "x(2)"
     c-lb-fornec at 41  format "x(10)"
     c-lb-ordem  at 54
     c-lb-pa     at 66  format "x(2)"
     c-lb-est    at 70  format "x(3)"
     c-lb-item   at 76
     c-lb-un     at 94  format "x(2)"
     c-lb-descr  at 97  format "x(9)"
     c-lb-proc   at 2   format "x(6)"
     c-lb-os     at 10  format "x(4)"
     c-lb-qtde   at 25  format "x(10)"
     c-lb-unit   at 40  format "x(14)"
     c-lb-merc   at 58  format "x(16)"
     c-lb-ipi    at 85  format "x(9)"
     c-lb-pr-tot at 104  format "x(11)"
     c-lb-moeda  at 116
     c-lb-atraso at 127 format "x(6)"
     "------------------------------------------------------------------" space(0)
     "------------------------------------------------------------------"
     with stream-io no-box no-label width 132 page-top frame f-cab-corpo.

form tt-ordem.comprado "-"
     tt-ordem.nome-comp  no-label skip(1)
     with stream-io no-box side-label frame f-quebra1.

form c-lb-estab            format "x(15)" space(0) ":"
     tt-ordem.cod-estabel "-"
     tt-ordem.nome-estab   skip(1)
     with stream-io no-box no-label frame f-quebra2.

form c-lb-fornec format "x(10)" space(0) ":"
     tt-ordem.nome-abrev    "-"
     tt-ordem.cod-emitente  "-"
     tt-ordem.nome-emit
     c-lb-fone   format "x(4)"  space(0) ":"
     tt-ordem.telefone
     tt-ordem.ramal
     c-lb-grupo  format "x(5)"  space(0) ":"
     tt-ordem.gr-forn-desc      skip
     c-lb-fax    format "x(3)"  space(0) ":"
     tt-ordem.telefax
     tt-ordem.ramal-fax         skip(1)
     with stream-io no-box no-label width 139 frame f-quebra5.

form tt-ordem.it-codigo   "-"
     tt-ordem.desc-item no-label skip(1)
     with stream-io no-box side-label width 132 frame f-quebra6.

form tt-ordem.num-pedido skip(1)
     with stream-io no-box side-label frame f-quebra7.

form tt-ordem.nr-processo "-"
     tt-ordem.proc-desc     no-label skip(1)
     with stream-io no-box side-label frame f-quebra8.

form tt-ordem.it-codigo "-"
     c-descricao            no-label
     with stream-io no-box side-label frame f-quebra9.

form c-lb-fornec format "x(10)" space(0) ":"
     tt-ordem.cod-emitente  "-"
     tt-ordem.nome-abrev
     c-lb-fone   format "x(4)"  space(0) ":"
     tt-ordem.telefone
     tt-ordem.ramal
     c-lb-grupo  format "x(5)"  space(0) ":"
     tt-ordem.gr-forn-desc      space(5)
     c-lb-fax    format "x(3)"  space(0) ":"
     tt-ordem.telefax
     tt-ordem.ramal-fax skip(1)
     with stream-io no-box no-label width 139 frame f-quebra10.

form narrativa.descricao
     tt-ordem.comentarios
     tt-ordem.narrativa
     with stream-io frame f-editor.

{utp/ut-liter.i PAR¶METROS * r}
assign c-lb-param = trim(return-value).
{utp/ut-liter.i SELE€ÇO * r}
assign c-lb-selec = trim(return-value).
{utp/ut-liter.i IMPRESSÇO * r}
assign c-lb-impr = trim(return-value).
{utp/ut-liter.i CLASSIFICA€ÇO * r}
assign c-lb-classe = trim(return-value).
{utp/ut-liter.i Moeda * r}
assign c-lb-moeda = trim(return-value).
{utp/ut-liter.i Narrativa_do_Item * r}
assign c-lb-narra-it = trim(return-value).
{utp/ut-liter.i Narrativa_do_Pedido * r}
assign c-lb-narra-ped = trim(return-value).
{utp/ut-liter.i Narrativa_da_Ordem * r}
assign c-lb-narra-ord = trim(return-value).
{utp/ut-liter.i Somente_Pedidos_Impressos * r}
assign c-lb-ped-emit = trim(return-value).
{utp/ut-liter.i Somente_Pedidos_Aprovados * r}
assign c-lb-ped-aprov  = trim(return-value).
{utp/ut-liter.i Texto_Livre_do_Item * r}
assign c-lb-texto = trim(return-value).
{utp/ut-liter.i Estabelecimento * r}
assign c-lb-estab = trim(return-value).
{utp/ut-liter.i Item * r}
assign c-lb-item = trim(return-value).
{utp/ut-liter.i Grupo_Fornecedor * r}
assign c-lb-grupo = trim(return-value).
{utp/ut-liter.i Fornecedor * r}
assign c-lb-fornec = trim(return-value).
{utp/ut-liter.i Comprador * r}
assign tt-ordem.comprado:label in frame f-quebra1 = trim(return-value)
       c-lb-compr = trim(return-value).
{utp/ut-liter.i Processo_Compra * r}
assign c-lb-proc = trim(return-value).
{utp/ut-liter.i Pedido_Compra * l}
assign c-lb-pedi = trim(return-value).
{utp/ut-liter.i Data_Entrega * r}
assign c-lb-data = trim(return-value).
{utp/ut-liter.i Salta_de_P gina_a_cada_Item * r}
assign c-lb-salta = trim(return-value).
{utp/ut-liter.i Destino * r}
assign c-lb-dest = trim(return-value).
{utp/ut-liter.i Usu rio * r}
assign c-lb-usuar = trim(return-value).
{utp/ut-liter.i Total * r}
assign c-lb-total = trim(return-value).
{utp/ut-liter.i Total_Geral * r}
assign c-lb-tot-ger = trim(return-value).
{utp/ut-liter.i Natureza * r}
assign c-lb-natur = trim(return-value).
{utp/ut-liter.i GF * r}
assign c-lb-gf = trim(return-value).
{utp/ut-liter.i Ordem * l}
assign c-lb-ordem = trim(return-value).
{utp/ut-liter.i Pa * l}
assign c-lb-pa = trim(return-value).
{utp/ut-liter.i Est * r}
assign c-lb-est = trim(return-value).
{utp/ut-liter.i Descri‡Æo * r}
assign c-lb-descr = trim(return-value).
{utp/ut-liter.i Un * r}
assign c-lb-un = trim(return-value).
{utp/ut-liter.i Referˆncia * r}
assign c-lb-refer = trim(return-value).
{utp/ut-liter.i O.S. * r}
assign c-lb-os = trim(return-value).
{utp/ut-liter.i Quantidade * r}
assign c-lb-qtde = trim(return-value).
{utp/ut-liter.i Pre‡o_Unit rio * r}
assign c-lb-unit = trim(return-value).
{utp/ut-liter.i Pre‡o_Mercadoria * r}
assign c-lb-merc = trim(return-value).
{utp/ut-liter.i Valor_IPI * r}
assign c-lb-ipi = trim(return-value).
{utp/ut-liter.i Pre‡o_Total * r}
assign c-lb-pr-tot = trim(return-value).
{utp/ut-liter.i Atraso * r}
assign c-lb-atraso = trim(return-value).
{utp/ut-liter.i Fone * r}
assign c-lb-fone = trim(return-value).
{utp/ut-liter.i Fax * r}
assign c-lb-fax = trim(return-value).

/* Integracao Modulo Importacao */
def var c-lb-despesas      as char                      no-undo.
def var c-lb-despesas-pag1 as char                      no-undo.
def var c-lb-despesas-pag2 as char                      no-undo.
def var c-lb-despesas-inc  as char                      no-undo.
def var de-val-desp        like cotacao-item.preco-unit no-undo.
DEF VAR r-rowid-ordem      AS ROWID                     NO-UNDO.
def var l-pendente         as logical                   no-undo.

{utp/ut-liter.i Despesas_Importa‡Æo * R}
assign c-lb-despesas      = trim(return-value).
{utp/ut-liter.i Despesas_Pagas_Fornecedor_Material * R}
assign c-lb-despesas-pag1 = trim(return-value).
{utp/ut-liter.i Todas_Despesas * R}
assign c-lb-despesas-pag2 = trim(return-value).
{utp/ut-liter.i Adiciona_Despesas_Pre‡o_Material * R}
assign c-lb-despesas-inc  = trim(return-value).

IF  NO THEN DO:
    FIND FIRST comprador    NO-LOCK NO-ERROR.
    FIND FIRST estabelec    NO-LOCK NO-ERROR.
    FIND FIRST grupo-fornec NO-LOCK NO-ERROR.
    FIND FIRST proc-compra  NO-LOCK NO-ERROR.
END.

/* fim do include */
